{{ if and (not .ephemeral) (or (eq .osid "linux-ubuntu") (eq .osid "linux-debian") (eq .osid "linux-raspbian")) -}}
#!/bin/bash

set -eufo pipefail

echo "Setting up Bitwarden CLI for Linux..."

# Force Linux PATH to take precedence over Windows paths in WSL
export PATH="/usr/local/bin:/usr/bin:/bin:$HOME/.local/bin:/snap/bin:$PATH"

# Remove any Windows Node.js/npm from PATH in WSL
if [[ -n "${WSL_DISTRO_NAME:-}" ]] || [[ -n "${WSL_INTEROP:-}" ]]; then
    echo "üêß Detected WSL environment - prioritizing Linux binaries"
    # Filter out Windows paths that might interfere
    export PATH=$(echo "$PATH" | tr ':' '\n' | grep -v '/mnt/[a-z]/' | tr '\n' ':' | sed 's/:$//')
    export PATH="/usr/local/bin:/usr/bin:/bin:$HOME/.local/bin:/snap/bin:$PATH"
fi

# Check if we have a working installation
if command -v bw >/dev/null 2>&1; then
    BW_PATH=$(which bw)
    echo "Found Bitwarden CLI at: $BW_PATH"

    # Prefer snap installation over npm
    if [[ "$BW_PATH" == /snap/* ]]; then
        if timeout 5 bw --version >/dev/null 2>&1; then
            echo "‚úÖ Snap Bitwarden CLI is working correctly"
            exit 0
        fi
    elif [[ "$BW_PATH" == /mnt/* ]]; then
        echo "‚ö†Ô∏è  Found Windows Bitwarden CLI, will prioritize Linux version..."
    elif timeout 5 bw --version >/dev/null 2>&1; then
        echo "‚úÖ Bitwarden CLI is working correctly"
        exit 0
    else
        echo "‚ö†Ô∏è  Found Bitwarden CLI but it's not working, trying alternatives..."
    fi
fi

# Method 1: Try snap first (most reliable for Ubuntu)
if command -v snap >/dev/null 2>&1; then
    echo "Trying to install Bitwarden CLI via snap..."
    if ! snap list | grep -q "^bw "; then
        if {{ $sudo := "sudo " }}{{ if eq .chezmoi.username "root" }}{{ $sudo = "" }}{{ end }}{{ $sudo }}snap install bw 2>/dev/null; then
            echo "‚úÖ Installed Bitwarden CLI via snap"
            # Test the snap installation
            if timeout 5 /snap/bin/bw --version >/dev/null 2>&1; then
                echo "‚úÖ Snap Bitwarden CLI test successful"
                exit 0
            fi
        fi
    else
        echo "‚úÖ Bitwarden CLI snap is already installed"
        # Test the existing snap installation
        if timeout 5 /snap/bin/bw --version >/dev/null 2>&1; then
            echo "‚úÖ Snap Bitwarden CLI test successful"
            exit 0
        fi
    fi
fi

# Method 2: Try npm only if Node.js 20+ is available
if command -v node >/dev/null 2>&1; then
    NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [[ "$NODE_VERSION" -ge 20 ]]; then
        echo "Node.js $(node --version) detected, trying npm installation..."

        if command -v npm >/dev/null 2>&1; then
            NPM_PATH=$(which npm)
            echo "Using npm at: $NPM_PATH"

            if [[ "$NPM_PATH" != /mnt/* ]]; then  # Ensure we're using Linux npm
                echo "Setting up npm for local installations..."

                # Clean up any existing broken installation
                if [[ -d "$HOME/.local/npm-global/lib/node_modules/@bitwarden/cli" ]]; then
                    echo "Removing existing npm installation..."
                    rm -rf "$HOME/.local/npm-global/lib/node_modules/@bitwarden/cli"
                fi

                # Create local npm directory
                mkdir -p "$HOME/.local/npm-global"

                # Configure npm to use local directory
                npm config set prefix "$HOME/.local/npm-global"

                # Add to PATH for current session
                export PATH="$HOME/.local/npm-global/bin:$PATH"

                # Install Bitwarden CLI
                echo "Installing Bitwarden CLI via Linux npm..."
                if npm install -g @bitwarden/cli; then
                    echo "‚úÖ Successfully installed Bitwarden CLI via npm"

                    # Test the installation
                    if timeout 5 "$HOME/.local/npm-global/bin/bw" --version >/dev/null 2>&1; then
                        echo "‚úÖ npm Bitwarden CLI test successful"
                        exit 0
                    else
                        echo "‚ùå npm installation test failed, removing..."
                        rm -rf "$HOME/.local/npm-global/lib/node_modules/@bitwarden/cli" 2>/dev/null
                    fi
                else
                    echo "‚ùå npm installation failed"
                fi
            fi
        fi
    else
        echo "‚ö†Ô∏è  Node.js $NODE_VERSION is too old for Bitwarden CLI (requires 20+)"
    fi
fi

# Method 3: Direct download fallback
echo "Trying direct download method..."
BW_VERSION=$(curl -s https://api.github.com/repos/bitwarden/clients/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/cli-v//')

if [ -n "$BW_VERSION" ]; then
    echo "Downloading Bitwarden CLI version $BW_VERSION..."

    # Detect architecture
    ARCH=$(uname -m)
    case $ARCH in
        x86_64) BW_ARCH="x86_64" ;;
        aarch64|arm64) BW_ARCH="aarch64" ;;
        armv7l) BW_ARCH="armv7" ;;
        *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
    esac

    # Try different URL formats
    for url_pattern in "bw-linux-${BW_ARCH}-${BW_VERSION}.zip" "bw-linux-${BW_VERSION}.zip"; do
        echo "Trying download: $url_pattern"
        if wget -O "/tmp/bw-linux.zip" "https://github.com/bitwarden/clients/releases/download/cli-v${BW_VERSION}/$url_pattern" 2>/dev/null; then
            if unzip -o "/tmp/bw-linux.zip" -d /tmp/ && [ -f "/tmp/bw" ]; then
                chmod +x /tmp/bw
                mkdir -p "$HOME/.local/bin"
                mv /tmp/bw "$HOME/.local/bin/"
                rm -f "/tmp/bw-linux.zip"

                # Test the installation
                if timeout 5 "$HOME/.local/bin/bw" --version >/dev/null 2>&1; then
                    echo "‚úÖ Successfully installed Bitwarden CLI via direct download"
                    exit 0
                fi
            fi
            break
        fi
    done
fi

echo "‚ö†Ô∏è  Multiple installation methods attempted"
echo "Bitwarden CLI installation summary:"
if command -v bw >/dev/null 2>&1; then
    echo "  - Found: $(which bw)"
    if timeout 5 bw --version >/dev/null 2>&1; then
        echo "  - Status: ‚úÖ Working"
    else
        echo "  - Status: ‚ùå Not working (likely Node.js compatibility issue)"
    fi
else
    echo "  - Status: ‚ùå Not found"
fi

echo ""
echo "If Bitwarden CLI is not working, try:"
echo "  1. Use the snap version: /snap/bin/bw"
echo "  2. Update Node.js: curl -fsSL https://deb.nodesource.com/setup_20.x | sudo bash - && sudo apt-get install -y nodejs"
echo "  3. Manual install: Download from https://github.com/bitwarden/clients/releases"
{{ end -}}
